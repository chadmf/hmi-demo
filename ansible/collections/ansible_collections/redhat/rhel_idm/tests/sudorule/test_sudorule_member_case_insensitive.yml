---
- name: Test sudorule members should be case insensitive.
  hosts: "{{ ipa_test_host | default('ipaserver') }}"
  become: no
  gather_facts: no

  vars:
    groups_present:
      - eleMENT1
      - Element2
      - eLeMenT3
      - ElemENT4


  tasks:
  - block:
    # SETUP
    - name: Ensure domain name
      set_fact:
        ipa_domain: ipa.test
      when: ipa_domain is not defined

    - name: Ensure test groups exist.
      redhat.rhel_idm.ipagroup:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
      loop: "{{ groups_present }}"

    - name: Ensure test hostgroups exist.
      redhat.rhel_idm.ipahostgroup:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
      loop: "{{ groups_present }}"

    - name: Ensure test hosts exist.
      redhat.rhel_idm.ipahost:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}.{{ ipa_domain }}"
        force: yes
      loop: "{{ groups_present }}"

    - name: Ensure test users exist.
      redhat.rhel_idm.ipauser:
        ipaadmin_password: SomeADMINpassword
        name: "user{{ item }}"
        first: "{{ item }}"
        last: "{{ item }}"
      loop: "{{ groups_present }}"

    - name: Ensure sudorule do not exist
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        state: absent
      loop: "{{ groups_present }}"

    # TESTS
    - name: Start tests.
      debug:
        msg: "Tests are starting."

    - name: Ensure sudorule exist with runasusers members
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        cmdcategory: all
        runasuser: "user{{ item }}"
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or not result.changed

    - name: Ensure sudorule exist with lowercase runasusers members
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        cmdcategory: all
        runasuser: "user{{ item | lower }}"
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or result.changed

    - name: Ensure sudorule exist with uppercase runasusers members
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        cmdcategory: all
        runasuser: "user{{ item | upper }}"
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or result.changed

    - name: Ensure sudorule exist with runasgroup members
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        cmdcategory: all
        runasgroup: "{{ item }}"
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or not result.changed

    - name: Ensure sudorule exist with lowercase runasgroup members
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        cmdcategory: all
        runasgroup: "{{ item | lower }}"
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or result.changed

    - name: Ensure sudorule exist with uppercase runasgroup members
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        cmdcategory: all
        runasgroup: "{{ item | upper }}"
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or result.changed

    - name: Ensure sudorule do not exist
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        state: absent
      loop: "{{ groups_present }}"

    #####

    - name: Ensure sudorule exist with members
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        cmdcategory: all
        hostgroup: "{{ item }}"
        host: "{{ item }}.{{ ipa_domain }}"
        group: "{{ item }}"
        user: "user{{ item }}"
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or not result.changed

    - name: Ensure sudorule exist with members, lowercase
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        cmdcategory: all
        hostgroup: "{{ item  | lower }}"
        host: "{{ item  | lower }}.{{ ipa_domain }}"
        group: "{{ item  | lower }}"
        user: "user{{ item  | lower }}"
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or result.changed

    - name: Ensure sudorule exist with members, uppercase
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        cmdcategory: all
        hostgroup: "{{ item  | upper }}"
        host: "{{ item  | upper }}.{{ ipa_domain }}"
        group: "{{ item  | upper }}"
        user: "user{{ item  | upper }}"
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or result.changed

    - name: Ensure sudorule member is absent
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        hostgroup: "{{ item }}"
        host: "{{ item }}.{{ ipa_domain }}"
        group: "{{ item }}"
        user: "user{{ item }}"
        action: member
        state: absent
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or not result.changed

    - name: Ensure sudorule member is absent, lowercase
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        hostgroup: "{{ item  | lower }}"
        host: "{{ item  | lower }}.{{ ipa_domain }}"
        group: "{{ item  | lower }}"
        user: "user{{ item  | lower }}"
        action: member
        state: absent
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or result.changed

    - name: Ensure sudorule member is absent, upercase
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        hostgroup: "{{ item  | upper }}"
        host: "{{ item  | upper }}.{{ ipa_domain }}"
        group: "{{ item  | upper }}"
        user: "user{{ item  | upper }}"
        action: member
        state: absent
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or result.changed

    - name: Ensure sudorule member is present, upercase
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        hostgroup: "{{ item  | upper }}"
        host: "{{ item  | upper }}.{{ ipa_domain }}"
        group: "{{ item  | upper }}"
        user: "user{{ item  | upper }}"
        action: member
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or not result.changed

    - name: Ensure sudorule member is present, lowercase
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        hostgroup: "{{ item  | lower }}"
        host: "{{ item  | lower }}.{{ ipa_domain }}"
        group: "{{ item  | lower }}"
        user: "user{{ item  | lower }}"
        action: member
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or result.changed

    - name: Ensure sudorule member is present, mixed case
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        hostgroup: "{{ item }}"
        host: "{{ item }}.{{ ipa_domain }}"
        group: "{{ item }}"
        user: "user{{ item }}"
        action: member
      loop: "{{ groups_present }}"
      register: result
      failed_when: result.failed or result.changed

    - name: End tests.
      debug:
        msg: "All tests executed."

    always:
    # cleanup
    - name: Ensure sudorule do not exist
      redhat.rhel_idm.ipasudorule:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        state: absent
      loop: "{{ groups_present }}"

    - name: Ensure test groups do not exist.
      redhat.rhel_idm.ipagroup:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        state: absent
      loop: "{{ groups_present }}"

    - name: Ensure test hostgroups do not exist.
      redhat.rhel_idm.ipahostgroup:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}"
        state: absent
      loop: "{{ groups_present }}"

    - name: Ensure test hosts do not exist.
      redhat.rhel_idm.ipahost:
        ipaadmin_password: SomeADMINpassword
        name: "{{ item }}.{{ ipa_domain }}"
        state: absent
      loop: "{{ groups_present }}"

    - name: Ensure test users do not exist.
      redhat.rhel_idm.ipauser:
        ipaadmin_password: SomeADMINpassword
        name: "user{{ item }}"
        state: absent
      loop: "{{ groups_present }}"
